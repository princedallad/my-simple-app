name: Production Deployment to Azure VM

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker images
        shell: bash
        run: |
          COMMIT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          docker compose build --build-arg IMAGE_TAG=$COMMIT_SHA
      
      - name: Push images to Docker Hub
        run: docker compose push
      
      - name: Add SSH host key to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Set up SSH connection
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to Azure VM
        run: |
          echo "Connecting to Azure VM: ${{ secrets.SSH_HOST }}"
          
          # Use a variable for the commit SHA
          COMMIT_SHA=$(echo $GITHUB_SHA | cut -c1-7)

          ssh -i $SSH_AUTH_SOCK -l ${{ secrets.SSH_USER }} ${{ secrets.SSH_HOST }} << 'EOF'
            echo "Successfully connected to the Azure VM."
            
            # Create deployment directory
            DEPLOY_DIR="~/my-simple-app"
            mkdir -p "$DEPLOY_DIR"
            cd "$DEPLOY_DIR"
            
            # Create or update .env file on VM
            echo "MONGO_ADMIN_USER=${{ secrets.MONGO_ADMIN_USER }}" > .env
            echo "MONGO_ADMIN_PASS=${{ secrets.MONGO_ADMIN_PASS }}" >> .env
            echo "IMAGE_TAG=${COMMIT_SHA}" >> .env

            docker system prune -af
            docker compose down
            docker compose pull
            docker compose up -d
            echo "Deployment completed successfully!"
            docker ps
          EOF

      - name: Cleanup SSH agent
        if: always()
        run: |
          ssh-agent -k