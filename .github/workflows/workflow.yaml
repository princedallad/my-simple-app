
name: CI/CD for Docker Compose App

on:
  push:
    branches: [ main ]

jobs:
  build-test-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate Compose file
        run: docker compose config


      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Build services
        
        run: |
          docker compose build
          docker compose down
          docker compose up -d
          docker ps
          docker compose logs

  deploy:
    runs-on: self-hosted
    needs: build-test-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env file for production
        shell: bash
        run: |
          COMMIT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          echo "MONGO_ADMIN_USER=${{ secrets.MONGO_ADMIN_USER }}" > .env
          echo "MONGO_ADMIN_PASS=${{ secrets.MONGO_ADMIN_PASS }}" >> .env
          echo "IMAGE_TAG=${COMMIT_SHA}" >> .env

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build, push, and deploy
        shell: bash
        run: |
          echo "Deploying latest stack..."

          # Read IMAGE_TAG from .env
          IMAGE_TAG=$(grep IMAGE_TAG .env | cut -d '=' -f2)

          # Build using .env variables
          docker compose --env-file .env build --build-arg IMAGE_TAG=${IMAGE_TAG}

          # Push using .env variables (ensures tags and env vars align)
          docker compose --env-file .env push

          # Deploy using the same .env file
          docker compose --env-file .env down
          docker compose --env-file .env pull
          docker compose --env-file .env up -d

          
  cleanup:
    runs-on: self-hosted
    needs: deploy
    if: always()
    steps:
      - name: Cleanup workspace
        run: |
          echo "Cleaning up runner workspace..."
          cd ~/actions-runner/_work
          rm -rf *

  